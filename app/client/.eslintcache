[{"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Home/Home.js":"1","/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/GlobalState.js":"2"},{"size":5196,"mtime":1610350654101,"results":"3","hashOfConfig":"4"},{"size":3038,"mtime":1610350632664,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1yknslg",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Home/Home.js",["12"],"import React, { useContext } from \"react\";\nimport RecordCard from \"../../components/RecordCard/RecordCard\";\nimport { Divider, Grid, Paper, Typography } from \"@material-ui/core\";\nimport HeroImage from \"../../components/HeroImage/HeroImage\";\nimport shopImage from \"../../images/shop-image.jpg\";\nimport { makeStyles } from \"@material-ui/core\";\nimport placeholderImage from \"../../images/placeholderImage.png\";\nimport CartContext from \"../../context/CartContext\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { GlobalContext } from \"../../context/GlobalState\";\nimport { useQuery } from \"react-query\";\n\nconst useStyles = makeStyles((theme) => {\n  const {\n    breakpoints,\n    palette: { fluro, light, primary, secondary },\n  } = theme;\n  return {\n    recordsGrid: {\n      padding: \"0rem\",\n    },\n    categoryTitle: {\n      width: \"100%\",\n      padding: \"0.3rem\",\n      backgroundColor: secondary.main,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      borderRadius: 0,\n      margin: \"2rem 0rem\",\n      // outline: `4px double ${primary.main}`,\n      // outlineOffset: \"-3px\",\n    },\n    titleText: {\n      letterSpacing: 3,\n      fontWeight: 400,\n      color: primary.main,\n      margin: 0,\n    },\n    heroContainer: {\n      backgroundColor: light.main,\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n    heroText: {\n      fontSize: \"2rem\",\n      letterSpacing: \"5px\",\n      fontWeight: \"200\",\n      textAlign: \"center\",\n\n      [breakpoints.down(\"sm\")]: {\n        fontSize: \"1rem\",\n        letterSpacing: \"1px\",\n      },\n      \"& span\": {\n        fontWeight: \"400\",\n        color: fluro.main,\n        outline: `4px double ${primary.main}`,\n        outlineOffset: \"-3px\",\n        padding: \"0.5rem\",\n        [breakpoints.down(\"sm\")]: {\n          fontSize: \"1rem\",\n          letterSpacing: \"1px\",\n          padding: \"0.2rem 0.5rem\",\n        },\n      },\n    },\n  };\n});\n\nconst records = [\n  {\n    artistName: \"First Artist\",\n    recordTitle: \"First Title\",\n    recordPrice: \"$80\",\n    recordLabel: \"First Label\",\n    releaseYear: \"1988\",\n    genres: [\"techno\", \"house\"],\n    coverImage: placeholderImage,\n    description:\n      \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n  },\n  {\n    artistName: \"Second Artist\",\n    recordTitle: \"Second Title\",\n    recordPrice: \"$60\",\n    recordLabel: \"Second Label\",\n    releaseYear: \"1988\",\n    genres: [\"techno\", \"house\"],\n    coverImage: placeholderImage,\n    description:\n      \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n  },\n  {\n    artistName: \"Third Artist\",\n    recordTitle: \"Third Title\",\n    recordPrice: \"$20\",\n    recordLabel: \"Third Label\",\n    releaseYear: \"1988\",\n    genres: [\"techno\", \"house\"],\n    coverImage: placeholderImage,\n    description:\n      \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n  },\n  {\n    artistName: \"Fourth Artist\",\n    recordTitle: \"Fourth Title\",\n    recordPrice: \"$33\",\n    recordLabel: \"Fourth Label\",\n    releaseYear: \"1988\",\n    genres: [\"acid\", \"house\"],\n    coverImage: placeholderImage,\n    description:\n      \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n  },\n];\n\nexport default function Home(props) {\n  const classes = useStyles();\n\n  const authContext = useContext(AuthContext);\n  const cartContext = useContext(CartContext);\n  const globalContext = useContext(GlobalContext);\n\n  const newReleases = useQuery(\"newReleases\", globalContext.fetchNewReleases());\n\n  const [newReleases, setNewReleases] = useState([]);\n\n\n\n  return (\n    <Grid container style={{}}>\n      <HeroImage>\n        <div className={classes.heroContainer}>\n          <Typography className={classes.heroText}>\n            HELLO AND WELCOME\n          </Typography>\n          <Typography className={classes.heroText}>\n            to the <span>catalog music</span> webstore\n          </Typography>\n          <Divider />\n        </div>\n        {/* <img\n          alt=\"catalog records\"\n          src={shopImage}\n          style={{ width: \"100%\", height: \"100%\", margin: \"auto\" }}\n        ></img> */}\n      </HeroImage>\n\n      <Paper className={classes.categoryTitle}>\n        <h1 className={classes.titleText}>new releases</h1>\n      </Paper>\n      <Grid\n        className={classes.recordsGrid}\n        justify=\"space-evenly\"\n        container\n        spacing={2}\n      >\n        {newReleases.map((record) => (\n          <Grid item xs={12} sm=\"auto\" key={record.recordTitle}>\n            <RecordCard record={record} />\n          </Grid>\n        ))}\n      </Grid>\n      <Paper className={classes.categoryTitle}>\n        <h1 className={classes.titleText}>fresh pre-loved</h1>\n      </Paper>\n      <Grid\n        className={classes.recordsGrid}\n        justify=\"space-evenly\"\n        container\n        spacing={2}\n      ></Grid>\n    </Grid>\n  );\n}\n","/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/GlobalState.js",["13"],"import React, { createContext, useReducer, useState } from \"react\";\nimport CartContext from \"./CartContext\";\nimport { cartReducer, ADD_RECORD, REMOVE_RECORD } from \"./reducers\";\nimport placeholderImage from \"../images/placeholderImage.png\";\nimport { API } from \"../util/fetch\";\nimport { useQuery } from \"react-query\";\n\nconst GlobalContext = createContext();\n\nconst GlobalState = ({ children }) => {\n  \"./api/shop/list\";\n  const records = [\n    {\n      id: 1,\n      artistName: \"First Artist\",\n      recordTitle: \"First Title\",\n      recordPrice: 80,\n      recordLabel: \"First Label\",\n      releaseYear: \"1988\",\n      genres: [\"techno\", \"house\"],\n      coverImage: placeholderImage,\n      description:\n        \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n    },\n    {\n      id: 2,\n      artistName: \"Second Artist\",\n      recordTitle: \"Second Title\",\n      recordPrice: 60,\n      recordLabel: \"Second Label\",\n      releaseYear: \"1988\",\n      genres: [\"techno\", \"house\"],\n      coverImage: placeholderImage,\n      description:\n        \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n    },\n    {\n      id: 3,\n      artistName: \"Third Artist\",\n      recordTitle: \"Third Title\",\n      recordPrice: 20,\n      recordLabel: \"Third Label\",\n      releaseYear: \"1988\",\n      genres: [\"techno\", \"house\"],\n      coverImage: placeholderImage,\n      description:\n        \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n    },\n    {\n      id: 4,\n      artistName: \"Fourth Artist\",\n      recordTitle: \"Fourth Title\",\n      recordPrice: 33,\n      recordLabel: \"Fourth Label\",\n      releaseYear: \"1988\",\n      genres: [\"acid\", \"house\"],\n      coverImage: placeholderImage,\n      description:\n        \"This is a record that has been created for whatever reason etc. If this were a long description it would be about this long.\",\n    },\n  ];\n  const [cartState, dispatch] = useReducer(cartReducer, { cart: [] });\n\n  const addToCart = (record) => {\n    dispatch({ type: ADD_RECORD, record: record });\n  };\n\n  const removeFromCart = (recordId) => {\n    dispatch({ type: REMOVE_RECORD, recordId: recordId });\n  };\n\n  const [modalState, setModalState] = useState(false);\n\n  const fetchNewReleases = async () => {\n    const { data } = API.get(\"/records/year/2020\");\n    console.log(data);\n    return data;\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        modalState: modalState,\n        setModalState: setModalState,\n        fetchNewReleases: fetchNewReleases,\n      }}\n    >\n      <CartContext.Provider\n        value={{\n          records: records,\n          cart: cartState.cart,\n          addToCart: addToCart,\n          removeFromCart: removeFromCart,\n        }}\n      >\n        {children}\n      </CartContext.Provider>\n    </GlobalContext.Provider>\n  );\n};\n\nexport { GlobalContext, GlobalState };\n",{"ruleId":null,"fatal":true,"severity":2,"message":"14","line":131,"column":10},{"ruleId":"15","severity":1,"message":"16","line":6,"column":10,"nodeType":"17","messageId":"18","endLine":6,"endColumn":18},"Parsing error: Identifier 'newReleases' has already been declared\n\n  129 |   const newReleases = useQuery(\"newReleases\", globalContext.fetchNewReleases());\n  130 | \n> 131 |   const [newReleases, setNewReleases] = useState([]);\n      |          ^\n  132 | \n  133 | \n  134 |","no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar"]