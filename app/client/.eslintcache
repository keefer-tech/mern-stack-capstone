[{"/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/AuthContext.js":"1","/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/reducers/cartReducer.js":"2","/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/GlobalState.js":"3","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/Cart.js":"4","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartItem.js":"5","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartTotals.js":"6","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartStyles.js":"7","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/ShippingDetails.js":"8","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/Checkout.js":"9"},{"size":1367,"mtime":1610492655541,"results":"10","hashOfConfig":"11"},{"size":1479,"mtime":1610492655542,"results":"12","hashOfConfig":"11"},{"size":924,"mtime":1610493348089,"results":"13","hashOfConfig":"11"},{"size":1298,"mtime":1610500376183,"results":"14","hashOfConfig":"11"},{"size":5161,"mtime":1610493482559,"results":"15","hashOfConfig":"11"},{"size":2059,"mtime":1610494309398,"results":"16","hashOfConfig":"11"},{"size":1036,"mtime":1610498552249,"results":"17","hashOfConfig":"11"},{"size":8338,"mtime":1610501530677,"results":"18","hashOfConfig":"11"},{"size":4886,"mtime":1610502431954,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yknslg",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/AuthContext.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/reducers/cartReducer.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/context/GlobalState.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/Cart.js",["40","41"],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartItem.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartTotals.js",["42","43","44","45"],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/CartStyles.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/ShippingDetails.js",["46","47","48","49","50","51","52","53","54","55","56"],"import {\n  Box,\n  Card,\n  Container,\n  Fade,\n  IconButton,\n  makeStyles,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport theme from \"../../components/App/theme\";\nimport { useForm } from \"react-hook-form\";\nimport axios from \"axios\";\nimport { API } from \"../../util/fetch\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { useCart } from \"../../context/CartContext\";\n\nconst useStyles = makeStyles((theme) => {\n  const {\n    palette: { light, primary, secondary },\n    breakpoints,\n  } = theme;\n  return {\n    formContainer: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      backgroundColor: primary.main,\n      padding: \"1rem\",\n      marginBottom: \"1rem\",\n      position: \"relative\",\n    },\n    formInput: {\n      fontSize: \"1rem\",\n      margin: 0,\n    },\n    formGroup: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"flex-start\",\n      margin: \"0.5rem\",\n    },\n    submitButton: {\n      border: `2px solid ${secondary.main}`,\n      borderRadius: 0,\n      marginTop: \"1rem\",\n      width: \"100%\",\n      padding: \"1rem\",\n      fontSize: \"1rem\",\n      textTransform: \"uppercase\",\n      fontWeight: \"400\",\n    },\n    formLabel: { fontSize: \"1rem\", color: secondary.main },\n    errorMessage: { color: \"#ed2e38\" },\n    formTitle: { margin: 0, padding: 0, width: \"100%\" },\n    successfulSubmit: {\n      padding: \"0.5rem, 2rem\",\n      backgroundColor: light.main,\n      color: secondary.main,\n      border: `2px solid ${secondary.main}`,\n    },\n    inputPairRow: {\n      display: \"flex\",\n      [breakpoints.only(\"xs\")]: {\n        flexDirection: \"column\",\n      },\n    },\n    addressLine1Input: {\n      fontSize: \"1rem\",\n      margin: 0,\n      width: \"100%\",\n    },\n    shippingTopBar: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      padding: \"0\",\n      width: \"100%\",\n      alignItems: \"center\",\n    },\n  };\n});\n\nexport default function ShippingDetails(props) {\n  const classes = useStyles();\n\n  const {\n    cartState: { cart, shipping },\n  } = useCart();\n\n  const [showShippingForm, setShowShippingForm] = useState(false);\n\n  const { register, handleSubmit, errors, setError, reset } = useForm();\n  const [successfulSubmit, setSuccessfulSubmit] = useState(false);\n  return (\n    <div>\n      <Card className={classes.formContainer}>\n        <div className={classes.shippingTopBar}>\n          <h1 className={classes.formTitle}>shipping details</h1>\n          {showShippingForm ? (\n            <IconButton onClick={() => setShowShippingForm(!showShippingForm)}>\n              <ExpandLess />\n            </IconButton>\n          ) : (\n            <IconButton onClick={() => setShowShippingForm(!showShippingForm)}>\n              <ExpandMore />\n            </IconButton>\n          )}\n        </div>\n\n        {showShippingForm && (\n          <form onSubmit={handleSubmit(props.onSubmit)} id=\"shippingDetails\">\n            <div className={classes.inputPairRow}>\n              <div className={classes.formGroup}>\n                <label className={classes.formLabel} htmlFor=\"first_name\">\n                  first name\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"first_name\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n              <div className={classes.formGroup}>\n                <label className={classes.formLabel} htmlFor=\"last_name\">\n                  last name\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"last_name\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n            </div>\n            <div className={classes.formGroup}>\n              <label className={classes.formLabel} htmlFor=\"addressLine1\">\n                address line 1\n              </label>\n              <input\n                ref={register({ required: true })}\n                className={classes.addressLine1Input}\n                type=\"text\"\n                name=\"addressLine1\"\n              />\n              {errors.release_id && errors.release_id.type === \"required\" && (\n                <p className={classes.errorMessage}>This is required</p>\n              )}\n            </div>\n\n            <div className={classes.inputPairRow}>\n              <div className={classes.formGroup}>\n                <label className={classes.formLabel} htmlFor=\"locality\">\n                  city\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"locality\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n              <div className={classes.formGroup}>\n                <label\n                  className={classes.formLabel}\n                  htmlFor=\"administrative_district_level_1\"\n                >\n                  state\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"administrative_district_level_1\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n            </div>\n            <div className={classes.inputPairRow}>\n              <div className={classes.formGroup}>\n                <label className={classes.formLabel} htmlFor=\"country\">\n                  country\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"country\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n              <div className={classes.formGroup}>\n                <label className={classes.formLabel} htmlFor=\"postcode\">\n                  postcode\n                </label>\n                <input\n                  ref={register({ required: true })}\n                  className={classes.formInput}\n                  type=\"text\"\n                  name=\"postcode\"\n                />\n                {errors.release_id && errors.release_id.type === \"required\" && (\n                  <p className={classes.errorMessage}>This is required</p>\n                )}\n              </div>\n            </div>\n            <div className={classes.formGroup}>\n              <label className={classes.formLabel} htmlFor=\"phone_number\">\n                phone number\n              </label>\n              <input\n                ref={register({ required: true })}\n                className={classes.formInput}\n                type=\"text\"\n                name=\"phone_number\"\n              />\n              {errors.release_id && errors.release_id.type === \"required\" && (\n                <p className={classes.errorMessage}>This is required</p>\n              )}\n            </div>\n            {successfulSubmit && (\n              <p className={classes.successfulSubmit}>\n                Record Submitted Successfully\n              </p>\n            )}\n            <input\n              className={classes.submitButton}\n              type=\"submit\"\n              value=\"Add Shipping Details\"\n              name=\"submit\"\n            />\n          </form>\n        )}\n      </Card>\n    </div>\n  );\n}\n","/Users/macbook/Documents/mern-stack-capstone/app/client/src/pages/Cart/Checkout.js",["57","58"],"import React from \"react\";\nimport { API } from \"../../util/fetch\";\nimport {\n  SquarePaymentForm,\n  CreditCardNumberInput,\n  CreditCardExpirationDateInput,\n  CreditCardCVVInput,\n  CreditCardSubmitButton,\n} from \"react-square-payment-form\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Card, IconButton } from \"@material-ui/core\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { useCart } from \"../../context/CartContext\";\n\nconst useStyles = (theme) => ({\n  paymentContainer: {\n    backgroundColor: \"#EEE\",\n    display: \"relative\",\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  checkoutTopBar: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    padding: \"0\",\n    alignItems: \"center\",\n  },\n  \".sq-input\": {\n    \n  }\n});\n\nclass Checkout extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      errorMessages: [],\n    };\n  }\n\n  submitPayment = async (nonce, price) => {\n    const payDetails = { nonce, price };\n    try {\n      const { data } = await API.post(`/payments/`, payDetails);\n      if (data) return data;\n    } catch (e) {\n      console.log(e.message);\n    }\n  };\n\n  cardNonceResponseReceived = async (errors, nonce, price) => {\n    if (errors) {\n      this.setState({ errorMessages: errors.map((error) => error.message) });\n      return;\n    }\n\n    this.setState({ errorMessages: [] });\n    alert(\"nonce created: \" + nonce);\n    const paymentResponse = await this.submitPayment(nonce, price);\n    console.log({ paymentResponse });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const showCardForm = this.props.showCardForm;\n    const setShowCardForm = this.props.setShowCardForm;\n    const cart = this.props.cart;\n\n    return (\n      <Card\n        style={{\n          borderRadius: 0,\n          backgroundColor: \"#EEE\",\n          marginBottom: \"1rem\",\n          padding: \"1rem\",\n          position: \"relative\",\n        }}\n      >\n        <div className={classes.checkoutTopBar}>\n          <h1 style={{ margin: 0 }}>card details</h1>\n          {showCardForm ? (\n            <IconButton onClick={() => setShowCardForm(!showCardForm)}>\n              <ExpandLess />\n            </IconButton>\n          ) : (\n            <IconButton onClick={() => setShowCardForm(!showCardForm)}>\n              <ExpandMore />\n            </IconButton>\n          )}\n        </div>\n        {showCardForm && (\n          <React.Fragment>\n            <SquarePaymentForm\n              sandbox={true}\n              applicationId={\"sandbox-sq0idb-FjbIBPKhnJ98JvdVZumxIA\"} //SANDBOX_APPLICATION_ID\n              locationId={\"LWB7HW6Z45KS9\"} //SANDBOX_LOCATION_ID\n              cardNonceResponseReceived={this.cardNonceResponseReceived}\n            >\n              <fieldset\n                className=\"sq-fieldset\"\n                style={{\n                  backgroundColor: \"#EEE\",\n                  border: \"none\",\n                  padding: \"1rem\",\n                }}\n              >\n                <div\n                  className=\"sq-form-third\"\n                  style={{\n                    border: \"1px solid #333\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    padding: \"0.5rem\",\n                    fontSize: \"1rem\",\n                    marginBottom: \"1rem\",\n                  }}\n                >\n                  <CreditCardNumberInput />\n                </div>\n                <div\n                  className=\"sq-form-third\"\n                  style={{\n                    border: \"1px solid #333\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    padding: \"0.5rem\",\n                    fontSize: \"1rem\",\n                    marginBottom: \"1rem\",\n                  }}\n                >\n                  <CreditCardExpirationDateInput />\n                </div>\n                <div\n                  className=\"sq-form-third\"\n                  style={{\n                    border: \"1px solid #333\",\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    padding: \"0.5rem\",\n                    fontSize: \"1rem\",\n                    marginBottom: \"1rem\",\n                  }}\n                >\n                  <CreditCardCVVInput />\n                </div>\n\n                <CreditCardSubmitButton>Pay $1.00</CreditCardSubmitButton>\n              </fieldset>\n            </SquarePaymentForm>\n\n            <div className=\"sq-error-message\">\n              {this.state.errorMessages.map((errorMessage) => (\n                <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\n              ))}\n            </div>\n          </React.Fragment>\n        )}\n      </Card>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Checkout);\n",{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":27},{"ruleId":"59","severity":1,"message":"63","line":14,"column":24,"nodeType":"61","messageId":"62","endLine":14,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":2,"column":17,"nodeType":"61","messageId":"62","endLine":2,"endColumn":27},{"ruleId":"59","severity":1,"message":"64","line":5,"column":8,"nodeType":"61","messageId":"62","endLine":5,"endColumn":19},{"ruleId":"59","severity":1,"message":"65","line":10,"column":3,"nodeType":"61","messageId":"62","endLine":10,"endColumn":17},{"ruleId":"59","severity":1,"message":"63","line":58,"column":24,"nodeType":"61","messageId":"62","endLine":58,"endColumn":32},{"ruleId":"59","severity":1,"message":"66","line":2,"column":3,"nodeType":"61","messageId":"62","endLine":2,"endColumn":6},{"ruleId":"59","severity":1,"message":"67","line":4,"column":3,"nodeType":"61","messageId":"62","endLine":4,"endColumn":12},{"ruleId":"59","severity":1,"message":"68","line":5,"column":3,"nodeType":"61","messageId":"62","endLine":5,"endColumn":7},{"ruleId":"59","severity":1,"message":"69","line":10,"column":8,"nodeType":"61","messageId":"62","endLine":10,"endColumn":13},{"ruleId":"59","severity":1,"message":"70","line":12,"column":8,"nodeType":"61","messageId":"62","endLine":12,"endColumn":13},{"ruleId":"59","severity":1,"message":"71","line":13,"column":10,"nodeType":"61","messageId":"62","endLine":13,"endColumn":13},{"ruleId":"59","severity":1,"message":"72","line":88,"column":18,"nodeType":"61","messageId":"62","endLine":88,"endColumn":22},{"ruleId":"59","severity":1,"message":"63","line":88,"column":24,"nodeType":"61","messageId":"62","endLine":88,"endColumn":32},{"ruleId":"59","severity":1,"message":"73","line":93,"column":43,"nodeType":"61","messageId":"62","endLine":93,"endColumn":51},{"ruleId":"59","severity":1,"message":"74","line":93,"column":53,"nodeType":"61","messageId":"62","endLine":93,"endColumn":58},{"ruleId":"59","severity":1,"message":"75","line":94,"column":28,"nodeType":"61","messageId":"62","endLine":94,"endColumn":47},{"ruleId":"59","severity":1,"message":"76","line":14,"column":10,"nodeType":"61","messageId":"62","endLine":14,"endColumn":17},{"ruleId":"59","severity":1,"message":"72","line":71,"column":11,"nodeType":"61","messageId":"62","endLine":71,"endColumn":15},"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'shipping' is assigned a value but never used.","'AuthContext' is defined but never used.","'buildLineItems' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","'Fade' is defined but never used.","'theme' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'cart' is assigned a value but never used.","'setError' is assigned a value but never used.","'reset' is assigned a value but never used.","'setSuccessfulSubmit' is assigned a value but never used.","'useCart' is defined but never used."]