[{"/Users/macbook/Documents/mern-stack-capstone/app/client/src/components/LoginModal/LoginForm.js":"1","/Users/macbook/Documents/mern-stack-capstone/app/client/src/util/helpers/newsHelpers.js":"2","/Users/macbook/Documents/mern-stack-capstone/app/client/src/components/RecordCard/RecordCardStyles.js":"3"},{"size":3762,"mtime":1611022598617,"results":"4","hashOfConfig":"5"},{"size":186,"mtime":1611023393993,"results":"6","hashOfConfig":"5"},{"size":2216,"mtime":1611023888822,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1yknslg",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Documents/mern-stack-capstone/app/client/src/components/LoginModal/LoginForm.js",["15","16"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport useStyles from \"./LoginStyles\";\nimport { API } from \"../../util/fetch\";\nimport { Redirect } from \"react-router-dom\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport { useGlobal } from \"../../context/GlobalState\";\n\nexport default function LoginForm({ login }) {\n  const classes = useStyles();\n  const { register, handleSubmit, errors, setError, setValue } = useForm();\n  const [redirectOnLogin, setRedirectOnLogin] = useState(false);\n  const auth = useAuth();\n  const globe = useGlobal();\n  const { setModalState } = globe;\n\n  const submitLoginInfo = async (userInfo) => {\n    try {\n      const { data } = await API.post(\"/auth/login\", userInfo);\n      auth.setAuthState(data);\n      setTimeout(() => {\n        globe.setLoginModalState(false);\n      }, 1300);\n      setRedirectOnLogin(true);\n    } catch (error) {\n      if (error.response) {\n        console.error(error.response.data.formError);\n        const { name, type, message } = error.response.data.formError;\n        setError(name, { type, message });\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {redirectOnLogin && <Redirect to=\"/\" />}\n      <div className={classes.formContainer}>\n        <h1 className={classes.formTitle}>log in</h1>\n        <form onSubmit={handleSubmit(submitLoginInfo)} id=\"loginForm\">\n          <div className={classes.formGroup}>\n            <label className={classes.formLabel} htmlFor=\"email\" name=\"email\">\n              email\n            </label>\n            <input\n              ref={register({ required: true })}\n              className={classes.formInput}\n              type=\"email\"\n              name=\"email\"\n              aria-label=\"email\"\n            />\n            {errors.email && errors.email.type === \"required\" && (\n              <span aria-label=\"alert\" className={classes.errorMessage}>\n                This is required\n              </span>\n            )}\n            {errors.email && errors.email.type === \"manual\" && (\n              <span aria-label=\"alert\" className={classes.errorMessage}>\n                {errors.email.message}\n              </span>\n            )}\n          </div>\n          <div className={classes.formGroup}>\n            <label className={classes.formLabel} htmlFor=\"password\">\n              password\n            </label>\n            <input\n              ref={register({ required: true, minLength: 7 })}\n              type=\"password\"\n              name=\"password\"\n              className={classes.formInput}\n              aria-label=\"password\"\n            />\n            {errors.password && errors.password.type === \"required\" && (\n              <span role=\"alert\" className={classes.errorMessage}>\n                This is required\n              </span>\n            )}\n            {errors.password && errors.password.type === \"minLength\" && (\n              <span role=\"alert\" className={classes.errorMessage}>\n                Minimum 7 characters\n              </span>\n            )}\n          </div>\n          <input\n            className={classes.submitButton}\n            type=\"submit\"\n            value=\"Submit\"\n            name=\"submit\"\n            aria-label=\"Submit\"\n          />\n        </form>\n        <span className={classes.signUpMessage}>\n          Don't have an account?\n          <Link\n            to=\"/signup\"\n            className={classes.bottomLinks}\n            color=\"secondary\"\n            onClick={() => globe.setLoginModalState(false)}\n          >\n            Sign Up\n          </Link>\n        </span>\n        <Link to=\"/\" className={classes.bottomLinks} color=\"secondary\">\n          Reset Password\n        </Link>\n      </div>\n    </React.Fragment>\n  );\n}\n","/Users/macbook/Documents/mern-stack-capstone/app/client/src/util/helpers/newsHelpers.js",[],"/Users/macbook/Documents/mern-stack-capstone/app/client/src/components/RecordCard/RecordCardStyles.js",[],{"ruleId":"17","severity":1,"message":"18","line":12,"column":53,"nodeType":"19","messageId":"20","endLine":12,"endColumn":61},{"ruleId":"17","severity":1,"message":"21","line":16,"column":11,"nodeType":"19","messageId":"20","endLine":16,"endColumn":24},"no-unused-vars","'setValue' is assigned a value but never used.","Identifier","unusedVar","'setModalState' is assigned a value but never used."]